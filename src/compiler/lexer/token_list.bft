section_helpers:
ident        -> [a-zA-Z][a-zA-Z_]*
char_inside  -> (.)|(\\[nt])
holder_ident -> [lsd]
int          -> [0-9]+
flt          -> [0-9]*'.'[0-9]*

section_tokens:
kwd_class    -> 'class'
kwd_module   -> 'module'
kwd_meth     -> 'meth'
kwd_if       -> 'if'
kwd_elseif   -> 'else_if'
kwd_else     -> 'else'
kwd_self     -> 'self'
kwd_super    -> 'super'
kwd_is       -> 'is'
kwd_isnow    -> 'is_now'
kwd_not      -> 'not'
kwd_forms    -> 'forms'
kwd_or       -> 'or'
kwd_lambda   -> 'lambda'
kwd_and      -> 'and'
kwd_for      -> 'for'
kwd_in       -> 'in'
kwd_enum     -> 'enum'
kwd_require  -> 'require'
kwd_import   -> 'import'
kwd_until    -> 'until'
kwd_unless   -> 'unless'
kwd_return   -> 'return'

ellipsis     -> '..'

param_ident -> {ident}':'
[save_text]

integer      -> {int}
[save_text]

neg_integer  -> '-'{int}
[save_text]

neg_float    -> '-'{flt}
[save_text]

float        -> {flt}
[save_text]

char         -> '\''{char_inside}'\''

string       -> '"'.*'"'
[save_text]

white_space  -> [\t ]
[ignore]

op_plus      -> '+'
op_minus     -> '-'
op_times     -> '*'
op_divide    -> '/'
op_modulus   -> '%'
op_assign    -> ':='
op_pow       -> '^'
op_concat    -> '++'
op_dot       -> '.'

identifier  -> {ident}
[save_text]

neg_ident   -> '-'{ident}
[save_text]

line_ending  -> \n

op_eq        -> '='
op_lt        -> '<'
op_leq       -> '<='
op_gt        -> '>'
op_geq       -> '>='
op_noteq     -> '/='

pipe         -> '|'

holder_begin -> {holder_ident}'{'
[save_text]
holder_end   -> '}'

block_begin  -> '['
block_end    -> ']'

paran_begin  -> '('
neg_paran    -> '-('
paran_end    -> ')'
